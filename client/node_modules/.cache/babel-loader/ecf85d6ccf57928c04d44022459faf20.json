{"ast":null,"code":"import * as TYPES from '../constants';\nimport { takeLatest, put } from 'redux-saga/effects';\nimport { getProductList, deleteProduct, addProduct, getProduct, updateProduct, searchProduct } from '../services';\n\nfunction* listUsers() {\n  try {\n    const params = action.pa; //API Call\n\n    const data = yield getProductList(); // Dispatch Action To Redux Store\n\n    yield put({\n      type: TYPES.GET_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\nexport function* list() {\n  // Take Last Action\n  yield takeLatest(TYPES.GET_LIST, listUsers);\n} //DELETE ITEM\n\nfunction* deleteListItem(action) {\n  try {\n    const item = action.payload; //API Call\n\n    const data = yield deleteProduct(item); // Dispatch Action To Redux Store\n\n    yield put({\n      type: TYPES.DELETE_LIST_ITEM_SUCCESS,\n      payload: item\n    });\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\nexport function* deleteItem() {\n  // Take Last Action\n  yield takeLatest(TYPES.DELETE_LIST_ITEM, deleteListItem);\n} //ADD ITEM\n\nfunction* addListItem(action) {\n  try {\n    const item = action.payload; //API Call\n\n    const data = yield addProduct(item); // Dispatch Action To Redux Store\n\n    yield put({\n      type: TYPES.ADD_LIST_ITEM_SUCCESS\n    });\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\nexport function* addItem() {\n  // Take Last Action\n  yield takeLatest(TYPES.ADD_LIST_ITEM, addListItem);\n} //GET ITEM\n\nfunction* getListItem(action) {\n  try {\n    const id = action.payload; //API Call\n\n    const data = yield getProduct(id); // Dispatch Action To Redux Store\n\n    yield put({\n      type: TYPES.GET_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\nexport function* getItem() {\n  // Take Last Action\n  yield takeLatest(TYPES.GET_DETAILS, getListItem);\n} //UPDATE ITEM\n\nfunction* updateListItem(action) {\n  try {\n    const item = action.payload;\n    const id = action.id; //API Call\n\n    const data = yield updateProduct(id, item); // Dispatch Action To Redux Store\n\n    yield put({\n      type: TYPES.UPDATE_LIST_ITEM_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\nexport function* updateItem() {\n  // Take Last Action\n  yield takeLatest(TYPES.UPDATE_LIST_ITEM, updateListItem);\n} //SEARCH ITEM\n\nfunction* searchListItem(action) {\n  try {\n    const searchText = action.payload; //API Call\n\n    const data = yield searchProduct(searchText); // Dispatch Action To Redux Store\n\n    yield put({\n      type: TYPES.SEARCH_LIST_ITEM_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\nexport function* searchItem() {\n  // Take Last Action\n  yield takeLatest(TYPES.SEARCH_LIST_ITEM, searchListItem);\n}","map":{"version":3,"sources":["/home/qbuser/Desktop/Learning/ecommerce-dashboard/client/src/sagas/list.tsx"],"names":["TYPES","takeLatest","put","getProductList","deleteProduct","addProduct","getProduct","updateProduct","searchProduct","listUsers","params","action","pa","data","type","GET_LIST_SUCCESS","payload","error","console","log","list","GET_LIST","deleteListItem","item","DELETE_LIST_ITEM_SUCCESS","deleteItem","DELETE_LIST_ITEM","addListItem","ADD_LIST_ITEM_SUCCESS","addItem","ADD_LIST_ITEM","getListItem","id","GET_DETAILS_SUCCESS","getItem","GET_DETAILS","updateListItem","UPDATE_LIST_ITEM_SUCCESS","updateItem","UPDATE_LIST_ITEM","searchListItem","searchText","SEARCH_LIST_ITEM_SUCCESS","searchItem","SEARCH_LIST_ITEM"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,cAAvB;AACA,SAASC,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,UAAxC,EAAoDC,UAApD,EAAgEC,aAAhE,EAA+EC,aAA/E,QAAoG,aAApG;;AAEA,UAAUC,SAAV,GAA2B;AACvB,MAAI;AACA,UAAMC,MAAM,GAAGC,MAAM,CAACC,EAAtB,CADA,CAEA;;AACA,UAAMC,IAAI,GAAG,MAAMV,cAAc,EAAjC,CAHA,CAIA;;AACA,UAAMD,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEd,KAAK,CAACe,gBADN;AAENC,MAAAA,OAAO,EAAEH;AAFH,KAAD,CAAT;AAIH,GATD,CAUA,OAAOI,KAAP,EAAc;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACH;AACJ;;AAED,OAAO,UAAUG,IAAV,GAAiB;AACpB;AACA,QAAMnB,UAAU,CAACD,KAAK,CAACqB,QAAP,EAAiBZ,SAAjB,CAAhB;AACH,C,CAED;;AACA,UAAUa,cAAV,CAAyBX,MAAzB,EAA2C;AACvC,MAAI;AACD,UAAMY,IAAI,GAAGZ,MAAM,CAACK,OAApB,CADC,CAEA;;AACA,UAAMH,IAAI,GAAG,MAAMT,aAAa,CAACmB,IAAD,CAAhC,CAHA,CAIA;;AACA,UAAMrB,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEd,KAAK,CAACwB,wBADN;AAENR,MAAAA,OAAO,EAAEO;AAFH,KAAD,CAAT;AAIH,GATD,CAUA,OAAON,KAAP,EAAc;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACH;AACJ;;AAED,OAAO,UAAUQ,UAAV,GAAuB;AAC1B;AACA,QAAMxB,UAAU,CAACD,KAAK,CAAC0B,gBAAP,EAAyBJ,cAAzB,CAAhB;AACH,C,CAED;;AACA,UAAUK,WAAV,CAAsBhB,MAAtB,EAAwC;AACpC,MAAI;AACD,UAAMY,IAAI,GAAGZ,MAAM,CAACK,OAApB,CADC,CAEA;;AACA,UAAMH,IAAI,GAAG,MAAMR,UAAU,CAACkB,IAAD,CAA7B,CAHA,CAIA;;AACA,UAAMrB,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEd,KAAK,CAAC4B;AADN,KAAD,CAAT;AAGH,GARD,CASA,OAAOX,KAAP,EAAc;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACH;AACJ;;AAED,OAAO,UAAUY,OAAV,GAAoB;AACvB;AACA,QAAM5B,UAAU,CAACD,KAAK,CAAC8B,aAAP,EAAsBH,WAAtB,CAAhB;AACH,C,CAED;;AAEA,UAAUI,WAAV,CAAsBpB,MAAtB,EAAwC;AACpC,MAAI;AACD,UAAMqB,EAAE,GAAGrB,MAAM,CAACK,OAAlB,CADC,CAEA;;AACA,UAAMH,IAAI,GAAG,MAAMP,UAAU,CAAC0B,EAAD,CAA7B,CAHA,CAIA;;AACA,UAAM9B,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEd,KAAK,CAACiC,mBADN;AAENjB,MAAAA,OAAO,EAAEH;AAFH,KAAD,CAAT;AAIH,GATD,CAUA,OAAOI,KAAP,EAAc;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACH;AACJ;;AAED,OAAO,UAAUiB,OAAV,GAAoB;AACvB;AACA,QAAMjC,UAAU,CAACD,KAAK,CAACmC,WAAP,EAAoBJ,WAApB,CAAhB;AACH,C,CAED;;AAEA,UAAUK,cAAV,CAAyBzB,MAAzB,EAA2C;AACvC,MAAI;AACD,UAAMY,IAAI,GAAGZ,MAAM,CAACK,OAApB;AACA,UAAMgB,EAAE,GAAGrB,MAAM,CAACqB,EAAlB,CAFC,CAGA;;AACA,UAAMnB,IAAI,GAAG,MAAMN,aAAa,CAACyB,EAAD,EAAKT,IAAL,CAAhC,CAJA,CAKA;;AACA,UAAMrB,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEd,KAAK,CAACqC,wBADN;AAENrB,MAAAA,OAAO,EAAEH;AAFH,KAAD,CAAT;AAIH,GAVD,CAWA,OAAOI,KAAP,EAAc;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACH;AACJ;;AAED,OAAO,UAAUqB,UAAV,GAAuB;AAC1B;AACA,QAAMrC,UAAU,CAACD,KAAK,CAACuC,gBAAP,EAAyBH,cAAzB,CAAhB;AACH,C,CAED;;AAGA,UAAUI,cAAV,CAAyB7B,MAAzB,EAA2C;AACvC,MAAI;AACD,UAAM8B,UAAU,GAAG9B,MAAM,CAACK,OAA1B,CADC,CAEA;;AACA,UAAMH,IAAI,GAAG,MAAML,aAAa,CAACiC,UAAD,CAAhC,CAHA,CAIA;;AACA,UAAMvC,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEd,KAAK,CAAC0C,wBADN;AAEN1B,MAAAA,OAAO,EAAEH;AAFH,KAAD,CAAT;AAIH,GATD,CAUA,OAAOI,KAAP,EAAc;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACH;AACJ;;AAED,OAAO,UAAU0B,UAAV,GAAuB;AAC1B;AACA,QAAM1C,UAAU,CAACD,KAAK,CAAC4C,gBAAP,EAAyBJ,cAAzB,CAAhB;AACH","sourcesContent":["import * as TYPES from '../constants';\nimport { takeLatest, put } from 'redux-saga/effects';\nimport { getProductList, deleteProduct, addProduct, getProduct, updateProduct, searchProduct } from '../services';\n\nfunction* listUsers(): any {\n    try {\n        const params = action.pa\n        //API Call\n        const data = yield getProductList();\n        // Dispatch Action To Redux Store\n        yield put({\n            type: TYPES.GET_LIST_SUCCESS,\n            payload: data\n        });\n    }\n    catch (error) {\n        console.log(\"error\", error);\n    }\n}\n\nexport function* list() {\n    // Take Last Action\n    yield takeLatest(TYPES.GET_LIST, listUsers);\n}\n\n//DELETE ITEM\nfunction* deleteListItem(action: any): any {\n    try {\n       const item = action.payload;\n        //API Call\n        const data = yield deleteProduct(item);\n        // Dispatch Action To Redux Store\n        yield put({\n            type: TYPES.DELETE_LIST_ITEM_SUCCESS,\n            payload: item\n        });\n    }\n    catch (error) {\n        console.log(\"error\", error);\n    }\n}\n\nexport function* deleteItem() {\n    // Take Last Action\n    yield takeLatest(TYPES.DELETE_LIST_ITEM, deleteListItem);\n}\n\n//ADD ITEM\nfunction* addListItem(action: any): any {\n    try {\n       const item = action.payload;\n        //API Call\n        const data = yield addProduct(item);\n        // Dispatch Action To Redux Store\n        yield put({\n            type: TYPES.ADD_LIST_ITEM_SUCCESS,\n        });\n    }\n    catch (error) {\n        console.log(\"error\", error);\n    }\n}\n\nexport function* addItem() {\n    // Take Last Action\n    yield takeLatest(TYPES.ADD_LIST_ITEM, addListItem);\n}\n\n//GET ITEM\n\nfunction* getListItem(action: any): any {\n    try {\n       const id = action.payload;\n        //API Call\n        const data = yield getProduct(id);\n        // Dispatch Action To Redux Store\n        yield put({\n            type: TYPES.GET_DETAILS_SUCCESS,\n            payload: data\n        });\n    }\n    catch (error) {\n        console.log(\"error\", error);\n    }\n}\n\nexport function* getItem() {\n    // Take Last Action\n    yield takeLatest(TYPES.GET_DETAILS, getListItem);\n}\n\n//UPDATE ITEM\n\nfunction* updateListItem(action: any): any {\n    try {\n       const item = action.payload;\n       const id = action.id;\n        //API Call\n        const data = yield updateProduct(id, item);\n        // Dispatch Action To Redux Store\n        yield put({\n            type: TYPES.UPDATE_LIST_ITEM_SUCCESS,\n            payload: data\n        });\n    }\n    catch (error) {\n        console.log(\"error\", error);\n    }\n}\n\nexport function* updateItem() {\n    // Take Last Action\n    yield takeLatest(TYPES.UPDATE_LIST_ITEM, updateListItem);\n}\n\n//SEARCH ITEM\n\n\nfunction* searchListItem(action: any): any {\n    try {\n       const searchText = action.payload;\n        //API Call\n        const data = yield searchProduct(searchText);\n        // Dispatch Action To Redux Store\n        yield put({\n            type: TYPES.SEARCH_LIST_ITEM_SUCCESS,\n            payload: data\n        });\n    }\n    catch (error) {\n        console.log(\"error\", error);\n    }\n}\n\nexport function* searchItem() {\n    // Take Last Action\n    yield takeLatest(TYPES.SEARCH_LIST_ITEM, searchListItem);\n}"]},"metadata":{},"sourceType":"module"}