{"ast":null,"code":"import * as TYPES from '../constants';\nimport { takeLatest, put } from 'redux-saga/effects';\nimport { getProductList, deleteProduct, addProduct, getProduct, updateProduct, searchProduct } from '../services';\n\nfunction* listUsers(action) {\n  try {\n    const params = action.payload;\n    const data = yield getProductList(params); // Dispatch Action To Redux Store\n\n    yield put({\n      type: TYPES.GET_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\nexport function* list() {\n  // Take Last Action\n  yield takeLatest(TYPES.GET_LIST, listUsers);\n} //DELETE ITEM\n\nfunction* deleteListItem(action) {\n  try {\n    const item = action.payload;\n    const data = yield deleteProduct(item); // Dispatch Action To Redux Store\n\n    yield put({\n      type: TYPES.DELETE_LIST_ITEM_SUCCESS,\n      payload: item\n    });\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\nexport function* deleteItem() {\n  // Take Last Action\n  yield takeLatest(TYPES.DELETE_LIST_ITEM, deleteListItem);\n} //ADD ITEM\n\nfunction* addListItem(action) {\n  try {\n    const item = action.payload;\n    const data = yield addProduct(item); // Dispatch Action To Redux Store\n\n    yield put({\n      type: TYPES.ADD_LIST_ITEM_SUCCESS\n    });\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\nexport function* addItem() {\n  // Take Last Action\n  yield takeLatest(TYPES.ADD_LIST_ITEM, addListItem);\n} //GET ITEM\n\nfunction* getListItem(action) {\n  try {\n    const id = action.payload;\n    const data = yield getProduct(id); // Dispatch Action To Redux Store\n\n    yield put({\n      type: TYPES.GET_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\nexport function* getItem() {\n  // Take Last Action\n  yield takeLatest(TYPES.GET_DETAILS, getListItem);\n} //UPDATE ITEM\n\nfunction* updateListItem(action) {\n  try {\n    const item = action.payload;\n    const id = action.id;\n    const data = yield updateProduct(id, item); // Dispatch Action To Redux Store\n\n    yield put({\n      type: TYPES.UPDATE_LIST_ITEM_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\nexport function* updateItem() {\n  // Take Last Action\n  yield takeLatest(TYPES.UPDATE_LIST_ITEM, updateListItem);\n} //SEARCH ITEM\n\nfunction* searchListItem(action) {\n  try {\n    const searchText = action.payload;\n    const data = yield searchProduct(searchText); // Dispatch Action To Redux Store\n\n    yield put({\n      type: TYPES.SEARCH_LIST_ITEM_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\nexport function* searchItem() {\n  // Take Last Action\n  yield takeLatest(TYPES.SEARCH_LIST_ITEM, searchListItem);\n}","map":{"version":3,"sources":["/home/qbuser/Desktop/Learning/ecommerce-dashboard/client/src/sagas/list.tsx"],"names":["TYPES","takeLatest","put","getProductList","deleteProduct","addProduct","getProduct","updateProduct","searchProduct","listUsers","action","params","payload","data","type","GET_LIST_SUCCESS","error","console","log","list","GET_LIST","deleteListItem","item","DELETE_LIST_ITEM_SUCCESS","deleteItem","DELETE_LIST_ITEM","addListItem","ADD_LIST_ITEM_SUCCESS","addItem","ADD_LIST_ITEM","getListItem","id","GET_DETAILS_SUCCESS","getItem","GET_DETAILS","updateListItem","UPDATE_LIST_ITEM_SUCCESS","updateItem","UPDATE_LIST_ITEM","searchListItem","searchText","SEARCH_LIST_ITEM_SUCCESS","searchItem","SEARCH_LIST_ITEM"],"mappings":"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","sourcesContent":["import * as TYPES from '../constants';\nimport { takeLatest, put } from 'redux-saga/effects';\nimport { getProductList, deleteProduct, addProduct, getProduct, updateProduct, searchProduct } from '../services';\n\nfunction* listUsers(action: any): any {\n    try {\n        const params = action.payload;\n        const data = yield getProductList(params);\n        // Dispatch Action To Redux Store\n        yield put({\n            type: TYPES.GET_LIST_SUCCESS,\n            payload: data\n        });\n    }\n    catch (error) {\n        console.log(\"error\", error);\n    }\n}\n\nexport function* list() {\n    // Take Last Action\n    yield takeLatest(TYPES.GET_LIST, listUsers);\n}\n\n//DELETE ITEM\nfunction* deleteListItem(action: any): any {\n    try {\n       const item = action.payload;\n        const data = yield deleteProduct(item);\n        // Dispatch Action To Redux Store\n        yield put({\n            type: TYPES.DELETE_LIST_ITEM_SUCCESS,\n            payload: item\n        });\n    }\n    catch (error) {\n        console.log(\"error\", error);\n    }\n}\n\nexport function* deleteItem() {\n    // Take Last Action\n    yield takeLatest(TYPES.DELETE_LIST_ITEM, deleteListItem);\n}\n\n//ADD ITEM\nfunction* addListItem(action: any): any {\n    try {\n       const item = action.payload;\n        const data = yield addProduct(item);\n        // Dispatch Action To Redux Store\n        yield put({\n            type: TYPES.ADD_LIST_ITEM_SUCCESS,\n        });\n    }\n    catch (error) {\n        console.log(\"error\", error);\n    }\n}\n\nexport function* addItem() {\n    // Take Last Action\n    yield takeLatest(TYPES.ADD_LIST_ITEM, addListItem);\n}\n\n//GET ITEM\n\nfunction* getListItem(action: any): any {\n    try {\n       const id = action.payload;\n        const data = yield getProduct(id);\n        // Dispatch Action To Redux Store\n        yield put({\n            type: TYPES.GET_DETAILS_SUCCESS,\n            payload: data\n        });\n    }\n    catch (error) {\n        console.log(\"error\", error);\n    }\n}\n\nexport function* getItem() {\n    // Take Last Action\n    yield takeLatest(TYPES.GET_DETAILS, getListItem);\n}\n\n//UPDATE ITEM\n\nfunction* updateListItem(action: any): any {\n    try {\n       const item = action.payload;\n       const id = action.id;\n        const data = yield updateProduct(id, item);\n        // Dispatch Action To Redux Store\n        yield put({\n            type: TYPES.UPDATE_LIST_ITEM_SUCCESS,\n            payload: data\n        });\n    }\n    catch (error) {\n        console.log(\"error\", error);\n    }\n}\n\nexport function* updateItem() {\n    // Take Last Action\n    yield takeLatest(TYPES.UPDATE_LIST_ITEM, updateListItem);\n}\n\n//SEARCH ITEM\n\n\nfunction* searchListItem(action: any): any {\n    try {\n       const searchText = action.payload;\n        const data = yield searchProduct(searchText);\n        // Dispatch Action To Redux Store\n        yield put({\n            type: TYPES.SEARCH_LIST_ITEM_SUCCESS,\n            payload: data\n        });\n    }\n    catch (error) {\n        console.log(\"error\", error);\n    }\n}\n\nexport function* searchItem() {\n    // Take Last Action\n    yield takeLatest(TYPES.SEARCH_LIST_ITEM, searchListItem);\n}"]},"metadata":{},"sourceType":"module"}