{"ast":null,"code":"var _jsxFileName = \"/home/qbuser/Desktop/Learning/ecommerce-dashboard/client/src/modules/AddProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Header from '../components/Header';\nimport { Container, Form, Col } from 'react-bootstrap';\nimport Button from '@material-ui/core/Button';\nimport './ProductList.css';\nimport { Actions } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddProduct = ({\n  match\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.list);\n  const id = parseInt(match.params.id);\n  const [name, setName] = useState(null);\n  const [description, setDescription] = useState(null);\n  const [quantity, setQuantity] = useState(null);\n  const [price, setPrice] = useState(null);\n  const [image, setImage] = useState(null);\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n\n    if (name && quantity && price) {\n      onSubmit();\n    }\n  };\n\n  useEffect(() => {\n    if (Number.isInteger(id)) {\n      dispatch(Actions.getItem(id));\n    }\n  }, [id]);\n  useEffect(() => {\n    const {\n      name,\n      description,\n      quantity,\n      price,\n      image\n    } = state.details;\n    setName(name);\n    setDescription(description);\n    setQuantity(quantity);\n    setPrice(price);\n    setImage(image);\n  }, [state]);\n\n  const onSubmit = () => {\n    log;\n    let imageData = new FormData();\n    imageData.append(\"myFile\", image, image === null || image === void 0 ? void 0 : image.name);\n    let params = {\n      name,\n      description,\n      quantity: parseInt(quantity),\n      price: parseInt(price),\n      image: imageData\n    }; //API Call\n\n    id ? dispatch(Actions.updateItem(id, params)) : dispatch(Actions.addListItem(params));\n  };\n\n  console.log(id);\n  console.log(Number.isInteger(id));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"go-back\",\n          size: \"small\",\n          color: \"inherit\",\n          children: \"GO BACK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        validated: validated,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: \"6\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              type: \"text\",\n              placeholder: \"Name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: \"6\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Description\",\n              value: description,\n              onChange: e => setDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: \"6\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Quantity\",\n              required: true,\n              type: \"number\",\n              maxLength: \"3\",\n              value: quantity,\n              onChange: e => setQuantity(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please provide a valid quantity.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: \"6\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Price\",\n              required: true,\n              type: \"number\",\n              maxLength: \"4\",\n              value: price,\n              onChange: e => setPrice(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please provide a valid price.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: \"6\",\n            children: /*#__PURE__*/_jsxDEV(Form.File, {\n              className: \"position-relative\",\n              required: true,\n              name: \"file\",\n              label: \"Image\",\n              id: \"validationFormik107\",\n              feedbackTooltip: true,\n              onChange: e => setImage(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: [\" \", Number.isInteger(id) ? 'UPDATE' : 'ADD']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddProduct, \"l15ojumpljV2PZrP2Di19nx4a7A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddProduct;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["/home/qbuser/Desktop/Learning/ecommerce-dashboard/client/src/modules/AddProduct.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Header","Container","Form","Col","Button","Actions","AddProduct","match","dispatch","state","list","id","parseInt","params","name","setName","description","setDescription","quantity","setQuantity","price","setPrice","image","setImage","validated","setValidated","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","onSubmit","Number","isInteger","getItem","details","log","imageData","FormData","append","updateItem","addListItem","console","e","target","value","files"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Header from '../components/Header';\nimport { Container, Form, Col} from 'react-bootstrap';\nimport Button from '@material-ui/core/Button';\nimport './ProductList.css';\nimport { Actions } from '../actions';\n\nconst AddProduct = ({match}) => {\n    const dispatch = useDispatch();\n    const state = useSelector((state)=> state.list);\n    const id = parseInt(match.params.id);\n    const [name, setName] = useState(null);\n    const [description, setDescription] = useState(null);\n    const [quantity, setQuantity] = useState(null);\n    const [price, setPrice] = useState(null);\n    const [image, setImage] = useState(null);\n    const [validated, setValidated] = useState(false);\n\n    const handleSubmit = (event) => {\n      const form = event.currentTarget;\n      if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      setValidated(true);\n      if( name && quantity && price){\n          onSubmit();\n      }\n    };\n  \n    useEffect(()=>{\n        if( Number.isInteger(id) ){\n            dispatch(Actions.getItem(id));\n        }\n    },[id]);\n\n    useEffect(()=>{\n        const { name, description, quantity, price, image } = state.details;\n        setName(name);\n        setDescription(description);\n        setQuantity(quantity);\n        setPrice(price);\n        setImage(image);\n    },[state])\n\n    const onSubmit = () =>{\n        log\n        let imageData = new FormData();\n        imageData.append(\n            \"myFile\",\n            image,\n            image?.name\n        )\n        let params = {\n            name,\n            description,\n            quantity: parseInt(quantity),\n            price: parseInt(price),\n            image: imageData\n        }\n        //API Call\n        id ?\n        dispatch(Actions.updateItem(id, params))\n        : \n        dispatch(Actions.addListItem(params))\n    }\n\n    console.log(id);\n    console.log(Number.isInteger(id));\n    return (\n        <>\n            <Header/>\n            <Container className=\"input-container\">\n                <a href=\"/\">\n                    <Button className=\"go-back\" size=\"small\" color=\"inherit\"  >\n                        GO BACK\n                    </Button>   \n                </a>\n                {/* <Form>\n                    <Form.Group aria-required>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control type=\"text\" value={name} placeholder=\"Enter name\" onChange={(e)=>setName(e.target.value)} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control type=\"text\" value={description} placeholder=\"Enter description\" onChange={(e)=>setDescription(e.target.value)} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Quantity</Form.Label>\n                        <Form.Control value={quantity} placeholder=\"Enter quantity\" onChange={(e)=>setQuantity(e.target.value)} />\n                    </Form.Group>\n                    <Form.Group aria-required>\n                        <Form.Label>Price</Form.Label>\n                        <Form.Control value={price} placeholder=\"Enter price\" onChange={(e)=>setPrice(e.target.value)} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.File id=\"exampleFormControlFile1\" label=\"Image of product\" />\n                    </Form.Group>\n                    <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n                        { Number.isInteger(id) ? 'UPDATE' : 'ADD'}\n                    </Button>\n                </Form> */}\n\n<Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Form.Row>\n        <Form.Group as={Col} md=\"6\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Name\"\n            value={name} onChange={(e)=>setName(e.target.value)}\n          />\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Form.Group as={Col} md=\"6\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Description\" value={description} onChange={(e)=>setDescription(e.target.value)}/>\n        </Form.Group>\n        </Form.Row>\n        <Form.Row>\n        <Form.Group as={Col} md=\"6\">\n          <Form.Label>Quantity</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Quantity\" required type=\"number\" maxLength=\"3\" value={quantity} onChange={(e)=>setQuantity(e.target.value)}/>\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a valid quantity.\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Form.Row>\n       <Form.Row>\n        <Form.Group as={Col} md=\"6\">\n          <Form.Label>Price</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Price\" required type=\"number\" maxLength=\"4\" value={price} onChange={(e)=>setPrice(e.target.value)}/>\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a valid price.\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Form.Row>\n       <Form.Row>\n        <Form.Group as={Col} md=\"6\">\n          <Form.File\n              className=\"position-relative\"\n              required\n              name=\"file\"\n              label=\"Image\"\n              id=\"validationFormik107\"\n              feedbackTooltip\n              onChange={(e)=> setImage(e.target.files[0])}\n            />\n        </Form.Group>\n      </Form.Row>\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\"> { Number.isInteger(id) ? 'UPDATE' : 'ADD'}</Button>\n    </Form>\n            </Container>\n        </>\n    );\n};\n\nexport default AddProduct;"]},"metadata":{},"sourceType":"module"}